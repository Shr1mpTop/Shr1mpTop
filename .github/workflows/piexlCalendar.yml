name: 生成像素风格贡献日历
on:
  schedule:
    - cron: "0 1 * * *"  # 每天凌晨1点自动更新
  workflow_dispatch:     # 允许手动触发
  # 添加仓库内容变更触发（可选）
  push:
    branches: [ main ]

# 关键修复：添加权限配置
permissions:
  contents: write  # 允许写入仓库内容
  pages: write     # 允许操作GitHub Pages
  id-token: write  # 用于身份验证

jobs:
  generate-contribution-grid:
    runs-on: ubuntu-latest
    steps:
      # 拉取仓库代码
      - name: checkout 代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保获取完整历史

      # 创建输出目录
      - name: 创建输出目录
        run: mkdir -p dist

      # 设置Python环境
      - name: 设置Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      # 安装依赖
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install matplotlib numpy requests python-dotenv

      # 生成贡献日历SVG（使用之前修复的解析逻辑）
      - name: 生成贡献日历SVG
        run: |
          # （此处省略Python脚本内容，保持与之前修复版一致）
          cat > generate_grid.py << 'EOF'
          import os
          import requests
          import matplotlib.pyplot as plt
          import numpy as np

          username = os.getenv('GITHUB_USERNAME')
          url = f"https://github-contributions-api.deno.dev/{username}.json"
          response = requests.get(url)
          contributions = response.json()

          grid_data = []
          week = []
          
          if 'contributions' in contributions:
              contribution_list = contributions['contributions']
          else:
              contribution_list = contributions

          for item in contribution_list:
              if isinstance(item, dict) and 'count' in item:
                  count = item['count']
              elif isinstance(item, list) and len(item) > 0 and isinstance(item[0], dict) and 'count' in item[0]:
                  count = item[0]['count']
              else:
                  count = 0
                  
              count = min(4, max(0, count))
              week.append(count)
              
              if len(week) == 7:
                  grid_data.append(week)
                  week = []

          if len(week) > 0:
              while len(week) < 7:
                  week.append(0)
              grid_data.append(week)

          grid_array = np.array(grid_data)
          plt.figure(figsize=(12, 6))
          cmap = plt.cm.viridis
          plt.imshow(grid_array, cmap=cmap, aspect='auto', vmin=0, vmax=4)
          plt.axis('off')
          plt.savefig('dist/contribution-grid.svg', bbox_inches='tight', pad_inches=0)
          EOF
          
          GITHUB_USERNAME=${{ github.repository_owner }} python generate_grid.py

      # 推送文件到仓库（更新权限相关配置）
      - name: 推送文件到仓库
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: output
          build_dir: dist
          # 新增配置：确保使用正确的推送方式
          fqdn: example.com  # 可选，留空即可
          commit_message: "Update contribution grid: ${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    

name: Update Last Active Badge

on:
  schedule:
    # 每小时运行一次
    - cron: '0 * * * *'
  workflow_dispatch: # 允许手动触发

jobs:
  update-gist:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Update Gist
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # 用于获取活动
          script: |
            // 使用默认的 'github' 客户端获取活动
            const response = await github.rest.activity.listPublicEventsForUser({
              username: 'Shr1mpTop',
              per_page: 100
            });

            const pushEvent = response.data.find(event => event.type === 'PushEvent');
            let lastActiveDate = 'never';
            let color = 'inactive';

            if (pushEvent) {
              const eventDate = new Date(pushEvent.created_at);
              const now = new Date();
              const diffTime = Math.abs(now - eventDate);
              const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));

              if (diffDays === 0) {
                lastActiveDate = 'today';
              } else if (diffDays === 1) {
                lastActiveDate = 'yesterday';
              } else {
                lastActiveDate = `${diffDays} days ago`;
              }
              color = "4B5563"; // 设置为活跃颜色
            }

            const gistData = {
              "schemaVersion": 1,
              "label": "Last Active",
              "message": lastActiveDate,
              "color": color
            };

            const gistId = '${{ secrets.GIST_ID }}';
            const gistToken = '${{ secrets.GIST_TOKEN }}';
            
            if (!gistId || !gistToken) {
              throw new Error('GIST_ID or GIST_TOKEN is not set in secrets');
            }

            // 使用 fetch API 和 GIST_TOKEN 直接更新 Gist
            // 这是最稳定、无依赖的方法
            await fetch(`https://api.github.com/gists/${gistId}`, {
              method: 'PATCH',
              headers: {
                'Authorization': `token ${gistToken}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                files: {
                  'last_active.json': {
                    content: JSON.stringify(gistData)
                  }
                }
              })
            });

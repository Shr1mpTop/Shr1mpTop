name: Update Last Active Badge

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  update-gist:
    runs-on: ubuntu-latest
    steps:
      - name: Update Gist using direct repo check
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // 1. 获取用户所有的公开仓库
            const repos = await github.paginate(github.rest.repos.listForUser, {
              username: 'Shr1mpTop',
              type: 'owner',
              sort: 'pushed', // 按最近推送时间排序
            });

            if (repos.length === 0) {
              console.log("没有找到任何公开仓库。");
              return; // 如果没有仓库就提前退出
            }

            // 2. 由于已经按 pushed 排序，第一个仓库就是最近活跃的
            const lastPushedRepo = repos[0];
            const lastPushedAt = lastPushedRepo.pushed_at;
            
            console.log(`最近活跃的仓库是: ${lastPushedRepo.name}, 推送于: ${lastPushedAt}`);

            // 3. 计算时间差
            let lastActiveDate = 'never';
            let color = 'inactive';

            if (lastPushedAt) {
              const eventDate = new Date(lastPushedAt);
              const now = new Date();
              const diffTime = Math.abs(now - eventDate);
              const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));

              if (diffDays === 0) {
                lastActiveDate = 'today';
              } else if (diffDays === 1) {
                lastActiveDate = 'yesterday';
              } else {
                lastActiveDate = `${diffDays} days ago`;
              }
              color = "4B5563";
            }

            // 4. 更新 Gist (这部分代码不变)
            const gistData = {
              "schemaVersion": 1,
              "label": "Last Active",
              "message": lastActiveDate,
              "color": color
            };

            const gistId = '${{ secrets.GIST_ID }}';
            const gistToken = '${{ secrets.GIST_TOKEN }}';
            
            if (!gistId || !gistToken) {
              throw new Error('GIST_ID or GIST_TOKEN is not set in secrets');
            }

            await fetch(`https://api.github.com/gists/${gistId}`, {
              method: 'PATCH',
              headers: {
                'Authorization': `token ${gistToken}`,
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                files: {
                  'last_active.json': {
                    content: JSON.stringify(gistData)
                  }
                }
              })
            });
